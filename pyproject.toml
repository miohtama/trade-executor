[tool.poetry]
name = "trade-executor"
version = "0.3"
description = "Algorithmic trading backtesting and live trading engine for decentralised finance"
authors = ["Mikko Ohtamaa <mikko@tradingstrategy.ai>"]
homepage = "https://tradingstrategy.ai"
repository = "https://github.com/tradingstrategy-ai/trade-executor"
license = "APGL"
readme = "README.md"
keywords = ["algorithmic trading", "ethereum", "cryptocurrency", "uniswap", "quantitative finance", "binance", "coinbase", "pancakeswap"]
packages = [
    { include = "tradeexecutor" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"

# Use these during development
# web3-ethereum-defi = {path = "deps/web3-ethereum-defi", develop = true}
# trading-strategy = {path = "deps/trading-strategy", develop = true}
trading-strategy = "^0.20.10"
requests = "^2.27.1"
matplotlib = "^3.6.0"
jupyterlab = "^3.5.0"
pandas-ta = "^0.3.14b"
tqdm-loggable = "0.1.4"


# data pulls in gql needed with some nodes
web3-ethereum-defi = {version="0.22.19", extras=["data", "test"]}

# tqdm progress bar doesn't show up in VScode Jupyter with ipywidgets>=8
# https://github.com/microsoft/vscode-jupyter/issues/11014
ipywidgets = ">=7.0,<8.0"

# https://github.com/apache/arrow/pull/35412
# Last checked 2023-07, still broken
urllib3 = "<2"

# Breaks OpenAPI package for now 2023-09
# AttributeError: module 'jsonschema._utils' has no attribute 'load_schema'
jsonschema = "4.17.3"

#
# Execution deps
#
typer = {version="^0.4.0", optional = true}
colorama = {version="^0.4.4", optional = true}
coloredlogs = {version="^15.0.1", optional = true}
prompt-toolkit = {version = "^3.0.31", optional = true}
APScheduler = {version="^3.9.1", optional = true}
#python-logstash-tradingstrategy = {version="^0.5.0", optional = true}
python-logstash-tradingstrategy = "0.5.1"
python-logging-discord-handler = {version="^0.1.3", optional = true}
python-dotenv = {version="^0.21.0", optional = true}
kaleido = {version="0.2.1", optional = true}
beautifulsoup4 = {version="^4.12.2", optional = true}  # Needed to export HTML reports

#
# Web server deps
#
pyramid = {version="^2.0", optional = true}
pyramid-openapi3 = {version="^0.16.0", optional = true}
waitress = {version="^2.0.0", optional = true}
WebTest = {version="^3.0.0", optional = true}
# python-openapi3 incompatible with newer versions
openapi-core = {version = "<0.17", optional = true}


#
# Legacy strategy deps
#
trading-strategy-qstrader = {version="^0.5",  optional = true}

#
# quantstats package for generating
# advanced statistical reports
#
quantstats = {version="^0.0.59", optional = true}

# Needed for Plotly Express scatter(trendline="ols)
# https://www.statsmodels.org/stable/index.html
statsmodels = {version="^0.14.0"}

#
# This package is to be used in various environemnts
# - Execution oracles (makes trades)
# - Client side Python within a browser
# - Web server
#
# Note: in the future execution may exist without a web server,
# e.g. in-browser  bots.
#
tqdm = "^4.64.1"
tblib = "^1.7.0"

[tool.poetry.extras]

# Legacy strats
qstrader = ["trading-strategy-qstrader"]

# Only needed when running live trades
execution = [
    "python-logging-discord-handler",
    "python-logstash-tradingstrategy",
    "APScheduler",
    "typer",
    "colorama",
    "coloredlogs",
    "prompt-toolkit",
    "python-dotenv",
    "setuptools",
    "kaleido",
    "beautifulsoup4",
    "web3-ethereum-defi",
]

# These dependencies are not neededon the client side code
web-server = [
    "pyramid",
    "WebTest",
    "openapi-core",
    "pyramid-openapi3",
    "waitress"
]

# for generating advanced statistical reports
quantstats = ["quantstats"]

[tool.poetry.dev-dependencies]
pytest = "^7.2.2"
ipdb = "^0.13.9"
flaky = "^3.7.0"

[tool.poetry.group.dev.dependencies]
pytest-reverse = "^1.5.0"
pytest-mock = "^3.11.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
trade-executor = 'tradeexecutor.cli.main:app'
get-latest-release = 'tradeexecutor.cli.latest_release:main'
prepare-docker-env = 'tradeexecutor.cli.prepare_docker_env:main'

[tool.pytest.ini_options]
addopts = "-s --tb=native"
testpaths = [
    "tests",
]
markers = [
    "slow_test_group: manually separated group of tests that take individually long time to run"
]

filterwarnings = [
    # python_openapi complaint
    "ignore:::.*.jsonschema",
    # DeprecationWarning: Subclassing validator classes is not intended to be part of their public API. A future version will make doing so an error, as the behavior of subclasses isn't guaranteed to stay the same between releases of jsonschema. Instead, prefer composition of validators, wrapping them in an object owned entirely by the downstream library.
    "ignore:::.*.validators",
    "ignore::DeprecationWarning:openapi_spec_validator.*:",
    #  DeprecationWarning: abi.decode_single() is deprecated and will be removed in version 4.0.0 in favor of abi.decode()
    "ignore::DeprecationWarning:eth_abi.*:",
    "ignore:::.*.codec",
    "ignore::DeprecationWarning:pandas.*:",
    "ignore::DeprecationWarning:quantstats.*:",
]
